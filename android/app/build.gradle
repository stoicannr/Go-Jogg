def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.mobile.starter_flutter"

        // TODO:Do all of this written below (it won't take long)

        //1. Get your debug keystore path (C:\Users\<USER>\.android)

        //2. Ensure keytools is in your PATH (C:\Program Files (x86)\Common Files\Oracle\Java\javapath)

        //3a. Get your SHA-1 key (keytool -list -v -keystore "path_from_before\debug.keystore" -alias androiddebugkey -storepass android -keypass android)
        //3b. Register your project in Firebase (don't forget to put and version google-services.json inside /android/app)

        /*
            4. Generate the Java Key Store file
                WINDOWS: keytool -genkey -v -keystore c:\Users\<USER_NAME>\keystore.jks -storetype JKS -keyalg RSA -keysize 2048 -validity 10000 -alias upload
                MACOS: keytool -genkey -v -keystore ~/upload-keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias upload

            5. Create key.properties in android root folder (CONTENTS BELOW)
                storePassword=<password from previous step>
                keyPassword=<password from previous step>
                keyAlias=upload
                storeFile=<location of the key store file, such as /Users/<user name>/upload-keystore.jks>
         */

        minSdkVersion 20
        targetSdkVersion 30

        multiDexEnabled true

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // TODO: change the scheme in case you are using identity server
        // manifestPlaceholders = [
        //         'appAuthRedirectScheme': '<scheme_here>'
        // ]
    }


    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.facebook.android:facebook-login:latest.release'

}

flutter {
    source '../..'
}
